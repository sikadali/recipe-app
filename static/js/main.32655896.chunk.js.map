{"version":3,"sources":["RecipeTile.js","App.js","reportWebVitals.js","index.js"],"names":["RecipeTile","recipe","match","className","alt","src","cuisineTypes","App","useState","query","setQuery","recipes","setRecipes","cuisineTypeLabel","setCuisineTypeLabel","url","getRecipes","a","Axios","get","result","data","hits","console","log","type","placeholder","value","onChange","e","target","onClick","preventDefault","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySAGe,SAASA,EAAT,GAA+B,IAAVC,EAAS,EAATA,OAChC,OAAIA,EAAM,OAAN,MAA0BC,MAAM,yBAE5B,sBAAKC,UAAU,aAAf,UACI,qBAAKC,IAAI,GAAGD,UAAU,kBAAkBE,IAAOJ,EAAM,OAAN,QAC/C,mBAAGE,UAAU,mBAAb,SAAiCF,EAAM,OAAN,WAIlC,KCPf,IAEMK,EAAe,CACpB,WACA,QACA,UACA,YACA,iBACA,UACA,iBACA,SACA,SACA,UACA,WACA,SACA,gBACA,UACA,iBACA,SACA,iBACA,oBAqDcC,MAlDf,WACC,MAA4BC,mBAAS,IAArC,mBAAQC,EAAR,KAAeC,EAAf,KACA,EAAgCF,mBAAS,IAAzC,mBAAQG,EAAR,KAAiBC,EAAjB,KACA,EAAkDJ,mBAAS,UAA3D,mBAAQK,EAAR,KAA0BC,EAA1B,KAEMC,EAAG,0CAAsCN,EAAtC,mBA5BK,WA4BL,oBA3BM,mCA2BN,qCAA4GI,GAE/GG,EAAU,uCAAG,4BAAAC,EAAA,sEACCC,IAAMC,IAAIJ,GADX,OACdK,EADc,OAElBR,EAAWQ,EAAOC,KAAKC,MACvBC,QAAQC,IAAIJ,EAAOC,MAHD,2CAAH,qDAWhB,OACC,sBAAKlB,UAAU,MAAf,UACC,oDACA,uBAAMA,UAAU,kBAAhB,UACC,uBACCsB,KAAK,OACLtB,UAAU,aACVuB,YAAY,wBACZC,MAAOlB,EACPmB,SAAU,SAACC,GAAD,OAAOnB,EAASmB,EAAEC,OAAOH,UAEpC,uBAAOxB,UAAU,cAAcsB,KAAK,SAASE,MAAM,SAASI,QAhB9C,SAACF,GACjBA,EAAEG,iBACFhB,OAeE,wBAAQb,UAAU,mBAAmB4B,QAAS,SAACF,GAAOf,EAAoBe,EAAEC,OAAOH,QAAnF,SACErB,EAAa2B,KAAK,SAACR,GACnB,OACC,iCACEA,YAON,qBAAKtB,UAAU,eAAf,SACEQ,EAAQsB,KAAI,SAAChC,GACb,OAAO,cAAC,EAAD,CAAYA,OAAQA,aC3DjBiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.32655896.chunk.js","sourcesContent":["import React from 'react';\nimport './RecipeTile.css';\n\nexport default function RecipeTile({recipe}) {\n    if (recipe['recipe']['image'].match(/\\.(jpg|jpeg|png|gif)$/)){    \n        return (\n            <div className=\"recipeTile\">\n                <img alt=\"\" className=\"recipeTile__img\" src = {recipe['recipe']['image']}/>\n                <p className=\"recipeTile__name\">{recipe['recipe']['label']}</p>\n            </div>\n        )\n    }else{\n        return null;\n    }\n}\n","import './App.css';\nimport Axios from 'axios';\nimport { useState } from 'react';\nimport RecipeTile from './RecipeTile';\n\nconst APP_ID = '717f8b5a';\nconst APP_KEY = 'e54036985819b21aef605d6f6c9579b0';\nconst cuisineTypes = [\n\t'American',\n\t'Asian',\n\t'British',\n\t'Caribbean',\n\t'Central Europe',\n\t'Chinese',\n\t'Eastern Europe',\n\t'French',\n\t'Indian',\n\t'Italian',\n\t'Japanese',\n\t'Kosher',\n\t'Mediterranean',\n\t'Mexican',\n\t'Middle Eastern',\n\t'Nordic',\n\t'South American',\n\t'South East Asian'\n];\n\nfunction App() {\n\tconst [ query, setQuery ] = useState('');\n\tconst [ recipes, setRecipes ] = useState([]);\n\tconst [ cuisineTypeLabel, setCuisineTypeLabel ] = useState(\"French\");\n\n\tconst url = `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}&from=0&to=15&cuisineType=${cuisineTypeLabel}`;\n\n\tconst getRecipes = async () => {\n\t\tlet result = await Axios.get(url);\n\t\tsetRecipes(result.data.hits);\n\t\tconsole.log(result.data);\n\t};\n\n\tconst onSubmit = (e) => {\n\t\te.preventDefault();\n\t\tgetRecipes();\n\t};\n\n\treturn (\n\t\t<div className=\"app\">\n\t\t\t<h1>World Food Recipes</h1>\n\t\t\t<form className=\"app__searchForm\">\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName=\"app__input\"\n\t\t\t\t\tplaceholder=\"enter some ingredient\"\n\t\t\t\t\tvalue={query}\n\t\t\t\t\tonChange={(e) => setQuery(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<input className=\"app__submit\" type=\"submit\" value=\"Search\" onClick={onSubmit} />\n\t\t\t\t<select className=\"app__cuisineType\" onClick={(e) => {setCuisineTypeLabel(e.target.value);}}>\n\t\t\t\t\t{cuisineTypes.map( (type) => {\n\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t<option>\n\t\t\t\t\t\t\t\t{type}\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</select>\n\t\t\t</form>\n\n\t\t\t<div className=\"app__recipes\">\n\t\t\t\t{recipes.map((recipe) => {\n\t\t\t\t\treturn <RecipeTile recipe={recipe} />;\n\t\t\t\t})}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}